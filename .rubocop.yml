require:
  - rubocop-rails
  - rubocop-rspec

Rails:
  Enabled: true

AllCops:
  TargetRubyVersion: 2.6
  Include:
    - 'lib/**/*'
    - 'app/**/*'
    - 'spec/**/*'
    - '**/Rakefile'
    - '**/Gemfile'
  Exclude:
    - 'app/views/**/*'
    - 'app/assets/**/*'
    - 'spec/fixtures/**/*'
  DefaultFormatter: progress
  DisplayCopNames: true
  DisplayStyleGuide: true
  StyleGuideBaseURL: https://rubystyle.guide/
  ExtraDetails: true
  StyleGuideCopsOnly: false
  UseCache: false

Layout/DotPosition:
  EnforcedStyle: leading
  SupportedStyles:
    - leading
    - trailing

Layout/EmptyLineBetweenDefs:
  AllowAdjacentOneLineDefs: true

Layout/AccessModifierIndentation:
  EnforcedStyle: indent
  SupportedStyles:
    - outdent
    - indent

Layout/MultilineMethodCallIndentation:
  EnforcedStyle: aligned
  SupportedStyles:
    - aligned
    - indented
    - indented_relative_to_receiver

Layout/CaseIndentation:
  EnforcedStyle: case
  SupportedStyles:
    - case
    - end
  IndentOneStep: false

Layout/HashAlignment:
  EnforcedColonStyle: key
  EnforcedLastArgumentHashStyle: always_inspect
  SupportedLastArgumentHashStyles:
    - always_inspect
    - always_ignore
    - ignore_implicit
    - ignore_explicit

Layout/EmptyLinesAroundBlockBody:
  EnforcedStyle: no_empty_lines
  SupportedStyles:
    - empty_lines
    - no_empty_lines

Layout/IndentationConsistency:
  EnforcedStyle: indented_internal_methods

Layout/LineLength:
  Max: 120

Metrics/MethodLength:
  CountComments: false
  Max: 25

Metrics/AbcSize:
  Max: 20

Metrics/BlockLength:
  CountComments: false
  Max: 25
  Exclude:
    - 'Rakefile'
    - '**/*.rake'
    - 'spec/**/*.rb'

Metrics/ParameterLists:
  Max: 3
  CountKeywordArgs: true

Metrics/PerceivedComplexity:
  Max: 7

Naming/MethodName:
  EnforcedStyle: snake_case
  SupportedStyles:
    - snake_case
    - camelCase

Naming/PredicateName:
  ForbiddenPrefixes:
    - is_
    - has_
    - have_
  AllowedMethods:
    - is_a?
  Exclude:
    - 'spec/**/*'

Rails/SafeNavigation:
  ConvertTry: true

Rails/TimeZone:
  EnforcedStyle: flexible
  SupportedStyles:
    - strict
    - flexible

Style/RaiseArgs:
  EnforcedStyle: exploded
  SupportedStyles:
    - compact
    - exploded

Style/RegexpLiteral:
  EnforcedStyle: slashes
  SupportedStyles:
    - slashes
    - percent_r
    - mixed
  AllowInnerSlashes: false


Style/NumericPredicate:
  EnforcedStyle: predicate
  SupportedStyles:
    - predicate
    - comparison
  Exclude:
    - 'spec/**/*'

Style/NumericLiterals:
  MinDigits: 999999999999
  Strict: true

Style/NonNilCheck:
  IncludeSemanticChanges: false

Style/Next:
  EnforcedStyle: skip_modifier_ifs
  MinBodyLength: 3
  SupportedStyles:
    - skip_modifier_ifs
    - always

Style/LambdaCall:
  EnforcedStyle: call
  SupportedStyles:
    - call
    - braces

Style/EmptyMethod:
  EnforcedStyle: compact
  SupportedStyles:
    - compact
    - expanded

Style/For:
  EnforcedStyle: each
  SupportedStyles:
    - for
    - each

Style/HashSyntax:
  EnforcedStyle: ruby19
  SupportedStyles:
    - ruby19
    - hash_rockets
    - no_mixed_keys
    - ruby19_no_mixed_keys
  UseHashRocketsWithSymbolValues: false
  PreferHashRocketsForNonAlnumEndingSymbols: true

Style/BlockDelimiters:
  EnforcedStyle: line_count_based
  SupportedStyles:
    - line_count_based
    - semantic
    - braces_for_chaining
  ProceduralMethods:
    - benchmark
    - bm
    - bmbm
    - create
    - each_with_object
    - measure
    - new
    - realtime
    - tap
    - with_object
  FunctionalMethods:
    - let
    - let!
    - subject
    - watch
  IgnoredMethods:
    - lambda
    - proc
    - it

Style/GuardClause:
  MinBodyLength: 1

Style/BarePercentLiterals:
  EnforcedStyle: bare_percent
  SupportedStyles:
    - percent_q
    - bare_percent

Style/AndOr:
  EnforcedStyle: always
  SupportedStyles:
    - always
    - conditionals

Style/FrozenStringLiteralComment:
  Enabled: false
  EnforcedStyle: always
  SupportedStyles:
    - when_needed
    - always

Style/BracesAroundHashParameters:
  EnforcedStyle: no_braces
  SupportedStyles:
    - braces
    - no_braces
    - context_dependent

Style/ClassAndModuleChildren:
  EnforcedStyle: nested
  SupportedStyles:
    - nested
    - compact

Style/ClassCheck:
  EnforcedStyle: is_a?
  SupportedStyles:
    - is_a?
    - kind_of?

Style/CollectionMethods:
  PreferredMethods:
    collect: 'map'
    collect!: 'map!'
    inject: 'reduce'
    detect: 'find'
    find_all: 'select'

Style/Documentation:
  Description: 'Document classes and non-namespace modules.'
  Enabled: false
  Exclude:
    - 'spec/**/*'
    - 'test/**/*'

Style/CommandLiteral:
  EnforcedStyle: backticks
  SupportedStyles:
    - backticks
    - percent_x
    - mixed
  AllowInnerBackticks: false

Style/CommentAnnotation:
  Keywords:
    - TODO
    - FIXME
    - OPTIMIZE
    - HACK
    - REVIEW

Style/ConditionalAssignment:
  EnforcedStyle: assign_to_condition
  SupportedStyles:
    - assign_to_condition
    - assign_inside_condition
  SingleLineConditionsOnly: true

Style/StringLiterals:
  EnforcedStyle: single_quotes
  SupportedStyles:
    - single_quotes
    - double_quotes
  ConsistentQuotesInMultiline: false

Style/DocumentationMethod:
  RequireForNonPublicMethods: false

RSpec/MessageSpies:
  Enabled: false
  EnforcedStyle: receive
  SupportedStyles:
    - receive
    - have_received